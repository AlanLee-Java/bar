<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.RefundMapper">
    
    <resultMap type="Refund" id="RefundResult">
        <result property="id"    column="id"    />
        <result property="refundNo"    column="refund_no"    />
        <result property="userId"    column="user_id"    />
        <result property="merchantId"    column="merchant_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="refundAmount"    column="refund_amount"    />
        <result property="reason"    column="reason"    />
        <result property="reasonDetail"    column="reason_detail"    />
        <result property="status"    column="status"    />
        <result property="failReason"    column="fail_reason"    />
        <result property="tradeNo"    column="trade_no"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="userName" column="userName"/>
        <result property="merchantName" column="merchantName"/>
        <result property="orderNo" column="orderNo"/>
    </resultMap>

    <sql id="selectRefundVo">
        select re.* ,
        ( SELECT wx_name FROM `bar_user` where id = re.user_id) as userName,
        ( SELECT `name` FROM  merchant Where id = re.merchant_id ) as merchantName ,
       	o.order_no as orderNo 
        from refund re join orders o on re.order_id = o.id 
    </sql>

    <select id="selectRefundList" parameterType="Refund" resultMap="RefundResult">
        <include refid="selectRefundVo"/>
        <where>  
            <if test="refundNo != null "> and re.refund_no  like concat('%',  #{refundNo},'%')</if>
            <if test="userId != null "> and re.user_id = #{userId}</if>
            <if test="merchantId != null "> and re.merchant_id = #{merchantId}</if>
            <if test="orderId != null "> and re.order_id = #{orderId}</if>
            <if test="orderNo != null "> and o.order_no like concat('%',  #{orderNo},'%') </if>
            <if test="refundAmount != null "> and re.refund_amount = #{refundAmount}</if>
            <if test="status != null "> and re.status = #{status}</if>
            <if test="tradeNo != null  and tradeNo != ''"> and re.trade_no  like concat('%',  #{tradeNo},'%')</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and re.create_time between #{params.beginCreateTime} and concat(#{params.endCreateTime},' 23:59:59')</if>
        
        </where>
    </select>
    
    <select id="selectRefundById" parameterType="Long" resultMap="RefundResult">
        <include refid="selectRefundVo"/>
        where re.id = #{id}
    </select>
        
    <insert id="insertRefund" parameterType="Refund" useGeneratedKeys="true" keyProperty="id">
        insert into refund
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="refundNo != null">refund_no,</if>
            <if test="userId != null">user_id,</if>
            <if test="merchantId != null">merchant_id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="refundAmount != null">refund_amount,</if>
            <if test="reason != null and reason != ''">reason,</if>
            <if test="reasonDetail != null">reason_detail,</if>
            <if test="status != null">status,</if>
            <if test="failReason != null">fail_reason,</if>
            <if test="tradeNo != null">trade_no,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="refundNo != null">#{refundNo},</if>
            <if test="userId != null">#{userId},</if>
            <if test="merchantId != null">#{merchantId},</if>
            <if test="orderId != null">#{orderId},</if>
            <if test="refundAmount != null">#{refundAmount},</if>
            <if test="reason != null and reason != ''">#{reason},</if>
            <if test="reasonDetail != null">#{reasonDetail},</if>
            <if test="status != null">#{status},</if>
            <if test="failReason != null">#{failReason},</if>
            <if test="tradeNo != null">#{tradeNo},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateRefund" parameterType="Refund">
        update refund
        <trim prefix="SET" suffixOverrides=",">
            <if test="refundNo != null">refund_no = #{refundNo},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="merchantId != null">merchant_id = #{merchantId},</if>
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="refundAmount != null">refund_amount = #{refundAmount},</if>
            <if test="reason != null and reason != ''">reason = #{reason},</if>
            <if test="reasonDetail != null">reason_detail = #{reasonDetail},</if>
            <if test="status != null">status = #{status},</if>
            <if test="failReason != null">fail_reason = #{failReason},</if>
            <if test="tradeNo != null">trade_no = #{tradeNo},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRefundById" parameterType="Long">
        delete from refund where id = #{id}
    </delete>

    <delete id="deleteRefundByIds" parameterType="String">
        delete from refund where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>